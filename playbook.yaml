---
- name: Deploy Kafka
  hosts: localhost
  gather_facts: no
  vars:
    kafka_version: '3.7.0'
    scala_version: '2.13'
    kafka_name: 'kafka_{{ scala_version }}-{{ kafka_version }}'
    kafka_home: '/opt/kafka'

  tasks:

# Download and installation

    - name: Install Java JRE
      apt:
        name: default-jre

    - name: Create Kafka Directory
      file:
        path: '{{ kafka_home }}'
        state: directory

    - name: Download Kafka Tarball
      get_url:
        url: 'https://downloads.apache.org/kafka/{{ kafka_version }}/{{ kafka_name }}.tgz'
        dest: '/tmp/{{ kafka_name }}.tgz'

    - name: Extract Kafka
      unarchive:
        src: '/tmp/{{ kafka_name }}.tgz'
        dest: '{{ kafka_home }}'
        extra_opts: "--strip-components=1"

# ZooKeeper and Kafka systemd services

    - name: Create ZooKeeper Systemd Service
      copy:
        src: kafka-zookeeper.service
        dest: '/usr/lib/systemd/system/kafka-zookeeper.service'

    - name: Create Kafka Systemd Service
      copy:
        src: kafka.service
        dest: '/usr/lib/systemd/system/kafka.service'

    - name: Start ZooKeeper Service
      systemd_service:
        name: kafka-zookeeper
        enabled: true
        state: started
        daemon-reload: true

    - name: Start Kafka Service
      systemd_service:
        name: kafka
        enabled: true
        state: started

# Kafka setup

    - name: Create Kafka Topic
      command: /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --topic example-topic --bootstrap-server localhost:9092

# Tests

    - name: Send Message
      shell: echo "Kafka Test Success" | /opt/kafka/bin/kafka-console-producer.sh --topic example-topic --bootstrap-server localhost:9092

#    - name: Read Message
#      command: /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic example-topic --from-beginning

